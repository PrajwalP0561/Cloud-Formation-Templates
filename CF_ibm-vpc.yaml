AWSTemplateFormatVersion: "2010-09-09"
Description: tcs vpc infrastructure
Resources:
  ibmmyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 192.168.0.0/16
      #EnableDnsSupport: 'true'
      #EnableDnsHostnames: 'true'
      Tags:
       - Key: Name
         Value: ibm-vpc

  ibmwebSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref ibmmyVPC
      CidrBlock: 192.168.0.0/20
      AvailabilityZone: "ap-south-1a"
      MapPublicIpOnLaunch: 'true'      
      Tags:
      - Key: Name
        Value: ibm-web-subnet

  ibmdbSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref ibmmyVPC
      CidrBlock: 192.168.16.0/20
      AvailabilityZone: "ap-south-1b"
      MapPublicIpOnLaunch: 'false'
      Tags:
      - Key: Name
        Value: ibm-database-subnet

  ibmInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: ibm-igw

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: ibmmyVPC
      InternetGatewayId:
        Ref: ibmInternetGateway

  ibmwebRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: ibmmyVPC
      Tags:
      - Key: Name
        Value: ibm-web-rt

  ibmdbRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: ibmmyVPC
      Tags:
      - Key: Name
        Value: ibm-database-rt

  ibmigwRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId:
        Ref: ibmwebRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: ibmInternetGateway

  ibmwebSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: ibmwebSubnet
      RouteTableId:
        Ref: ibmwebRouteTable

  ibmdbSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: ibmdbSubnet
      RouteTableId:
        Ref: ibmdbRouteTable

  ibmwebNetworkAcl:
     Type: AWS::EC2::NetworkAcl
     Properties:
        VpcId:
          Ref: ibmmyVPC
        Tags:
        - Key: Name
          Value: ibm-web-nacl

  ibmdbNetworkAcl:
     Type: AWS::EC2::NetworkAcl
     Properties:
        VpcId:
          Ref: ibmmyVPC
        Tags:
        - Key: Name
          Value: ibm-database-nacl

  ibmwebSubnetNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: ibmwebSubnet
      NetworkAclId:
        Ref: ibmwebNetworkAcl

  ibmdbSubnetNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: ibmdbSubnet
      NetworkAclId:
        Ref: ibmdbNetworkAcl

  ibmwebnaclInboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: ibmwebNetworkAcl
      RuleNumber: 100
      Protocol: 6
      RuleAction: allow
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 22
        To: 65535

  ibmdbnaclOutboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: ibmdbNetworkAcl
      RuleNumber: 100
      Protocol: 6
      RuleAction: allow
      CidrBlock: 0.0.0.0/0
      Egress: true
      PortRange:
        From: 22
        To: 65535

  ibmwebnaclOutboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: ibmwebNetworkAcl
      RuleNumber: 100
      Protocol: 6
      RuleAction: allow
      CidrBlock: 0.0.0.0/0
      Egress: true
      PortRange:
        From: 22
        To: 65535

  ibmdbnaclinboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: ibmdbNetworkAcl
      RuleNumber: 100
      Protocol: 6
      RuleAction: allow
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 22
        To: 65535

  ibmwebSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to client host
      VpcId: !Ref ibmmyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0        
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0

  ibmdbSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow ssh from web server only.
      VpcId: !Ref ibmmyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 192.168.0.0/16        
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0

  ibmwebInstance:
    Type: 'AWS::EC2::Instance'
    Properties: 
       ImageId: ami-04629cfb3bd2d73f3
       InstanceType: t2.micro
       KeyName: mumbai
       SubnetId: !Ref ibmwebSubnet
       SecurityGroupIds:
         - !Ref ibmwebSecurityGroup
       Tags:
       - Key: Name
         Value: ibm-web-instance